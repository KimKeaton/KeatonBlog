@model KeatonBlog.Models.BlogPost

@{
    ViewBag.Title = "Edit";
}

    <h2>Edit the Blog Post</h2>


@using (Html.BeginForm("Edit", "BlogPosts", FormMethod.Post, new { encType = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.MediaURL)
    @Html.HiddenFor(model => model.Slug)
    @Html.HiddenFor(model => model.Created)


    <div class="form-group">
        <label class="control-label col-md-2">Created</label>
        <div class="col-md-10">@Model.Created.ToString("MMMM dd, yyyy h:mm")</div>
    </div>


    <div class="form-group">
        <label class="control-label col-md-2">Last Updated</label>
        <div class="col-md-10">@Model.Updated.Value.ToString("MMMM dd, yyyy h:mm")</div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Slug)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", id = "editor" } })

            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.MediaURL)
            @*<input name="image" type="file" class="form-control" id="fileUpload" />*@
            @Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Published)
                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#editor'
            });
        });
    </script>

}
