@model KeatonBlog.Models.BlogPost

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<main>
    <div class="container">
        <div class="col-md-12  col-lg-12">
            <div class="single-post  single-post--fullsize">
                <div class="single-post__image">

                    @if (Model.MediaURL != null)
                    {
                        <img class="img-responsive" src="@Model.MediaURL" alt="">
                    }
                </div>
                <div class="single-post__title">
                    <h2>@Html.DisplayFor(model => model.Title)</h2>
                </div>
                <div class="single-post__info">
                    <span>By Kimberly Keaton</span>
                    <span>@Model.Created.ToString("MMMM dd, yyyy")</span>
                    <span>Comments (@Model.Comments.Count)</span>
                    <span>Published: @Html.DisplayFor(model => model.Published)</span>
                </div>
                <div class="single-post__content">
                    <p>
                        @Html.Raw(Model.Body)
                    </p>
                </div>

                <div class="single-post__footer">
                    <span>
                        @if (@Model.Updated != null)
                        {
                            <div>Last Updated:</div>
                            <div>@Model.Updated.Value.ToString("MMMM dd, yyyy h:mm")</div>
                        }
                    </span>

                    <div class="single-post__footer-tags">
                        <div class="single-post__footer-tags-list">
                        </div>
                    </div>

                </div>

                @*<div class="single-post__nav">
                    <a class="single-post__nav-previous" href="#">
                        <span class="single-post__nav-previous-link">Previous Post</span>
                        <span>Figure out how to show previous slug</span>
                    </a>
                    <a class="single-post__nav-next" href="#">
                        <span class="single-post__nav-next-link">Next Post</span>
                        <span>Figure out how to show next slug</span>
                    </a>
                </div>*@

                <div class="single-post__comments">
                    <h5>Comments</h5>

                    <ul class="single-post__comments-list">
                        @foreach (var item in Model.Comments)
                        {
                            <li class="single-post__comments-item">
                                <div class="single-post__comments-item-body">
                                    <div class="single-post__comments-item-avatar">
                                        <img src="~/Template/img/MyImageIcon.jpg" alt="Comment Author">
                                    </div>
                                    <div class="single-post__comments-item-right">

                                        <div class="single-post__comments-item-info">
                                            <div class="single-post__comments-item-info-author">
                                                <span>
                                                    <a href="#">@item.Author.FirstName @item.Author.LastName</a>
                                                </span>
                                            </div>
                                            <div class="single-post__comments-item-info-date">
                                                <span>@item.Created.ToString("MMMM dd, yyyy")</span>
                                            </div>
                                        </div>
                                        <div class="single-post__comments-item-post">
                                            <p>@item.Body</p>

                                            <p>
                                                @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
                                                {
                                                    @Html.ActionLink("Edit", "Edit", "Comments", new { id = @item.Id, Slug = Model.Slug }, new { @class = "btn btn-default" })
                                                    @Html.ActionLink("Delete", "Delete", "Comments", new { id = @item.Id, Slug = Model.Slug }, new { @class = "btn btn-default" })
                                                }
                                            </p>
                                        </div>
                                    </div>
                                </div>

                            </li>

                        }

                    </ul>


                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="single-post__comments-respond">
                            <h5>Leave a Comment</h5>
                            @using (Html.BeginForm("Create", "Comments", new { blogPostID = Model.Id }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <p class="single-post__comments-respond-comment">
                                    <label for="comment">Comment</label>
                                    <textarea name="Body" class="form-control"></textarea>

                                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                </p>
                                <button type="submit" class="btn btn-default">Submit Comment</button>
                            }

                        </div>
                    }
                    else
                    {
                        <p>@Html.ActionLink("Please Login to Leave a Comment", "Login", "Account", new { returnUrl = Url.Action("Details", "BlogPosts", new { Slug = Model.Slug }) }, new { @class = "bth btn-lg btn-default" })</p>
                    }



                </div>
            </div>
        </div>
    </div>
</main>

<p>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-default" })
        @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "btn btn-default" })
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })

    }
    else
    {
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
    }
</p>
